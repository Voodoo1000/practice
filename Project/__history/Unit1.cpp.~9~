//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include "Unit2.h"
#include "Unit3.h"

#include <vector>
#include <math.h>
#include <string>

using namespace std;
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;

//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------

void __fastcall TForm1::FormCreate(TObject *Sender)
{
	StringGrid1->Cells[0][0] = "№ точки"; //колонка-строка
	StringGrid1->Cells[1][0] = "X";
	StringGrid1->Cells[2][0] = "Y";

}

const int AxisOffset = 30; // Смещение осей от края PaintBox
const int TickSize = 5; // Длина засечек на осях
const int TickTextOffset = 10; // Отступ меток делений от осей

// Функция для рисования осей координат
void DrawAxes(TCanvas* Canvas, int Width, int Height)
{
    // Очистка Canvas
    Canvas->Brush->Color = clWhite;
    Canvas->FillRect(Rect(0, 0, Width, Height));

    // Рисование осей X и Y
    Canvas->Pen->Color = clBlack;
    Canvas->MoveTo(AxisOffset, Height / 2);
    Canvas->LineTo(Width - AxisOffset, Height / 2);
    Canvas->MoveTo(AxisOffset, AxisOffset);
    Canvas->LineTo(AxisOffset, Height - AxisOffset);

    // Рисование делений на осях X и Y
    int Step = 50; // Шаг делений на осях
    int XPos = AxisOffset + Step;
    int YPos = Height / 2 - TickSize;
    int TextOffset = TickSize + TickTextOffset;

    while (XPos < Width - AxisOffset)
    {
        // Рисование положительных делений на оси X
        Canvas->MoveTo(XPos, Height / 2 - TickSize);
        Canvas->LineTo(XPos, Height / 2 + TickSize);
        Canvas->TextOutW(XPos - TextOffset, Height / 2 + TextOffset, IntToStr(XPos - AxisOffset));
        XPos += Step; // Переход к следующему делению
    }

    while (YPos > AxisOffset)
    {
        // Рисование положительных делений на оси Y
        Canvas->MoveTo(AxisOffset - TickSize, YPos);
        Canvas->LineTo(AxisOffset + TickSize, YPos);
        Canvas->TextOutW(AxisOffset + TickSize + 5, YPos - TextOffset, IntToStr(Height / 2 - YPos));
        YPos -= Step; // Переход к следующему делению
    }

    // Отрицательные значения на осях
    XPos = AxisOffset - Step; // Начальная позиция X (слева)
    YPos = Height / 2 + TickSize; // Начальная позиция Y (снизу)

    while (XPos > 0)
    {
        // Рисование отрицательных делений на оси X
        Canvas->MoveTo(XPos, Height / 2 - TickSize);
        Canvas->LineTo(XPos, Height / 2 + TickSize);
        Canvas->TextOutW(XPos - TextOffset, Height / 2 + TextOffset, IntToStr(-(AxisOffset - XPos)));
        XPos -= Step; // Переход к следующему делению слева
    }

    while (YPos < Height)
    {
        // Рисование отрицательных делений на оси Y
        Canvas->MoveTo(AxisOffset - TickSize, YPos);
        Canvas->LineTo(AxisOffset + TickSize, YPos);
        Canvas->TextOutW(AxisOffset + TickSize + 5, YPos - TextOffset, IntToStr(-(YPos - Height / 2)));
        YPos += Step; // Переход к следующему делению сверху
	}
}
void __fastcall TForm1::DrawPoints()
{
	PaintBox1->Canvas->Brush->Color = clRed;
	PaintBox1->Canvas->Pen->Color = clBlack;

	for (int i = 1; i < StringGrid1->RowCount; i++)
	{
		int x, y;
		if (TryStrToInt(StringGrid1->Cells[1][i], x) && TryStrToInt(StringGrid1->Cells[2][i], y))
		{
			int paintBoxX = AxisOffset + x;
			int paintBoxY = PaintBox1->Height / 2 - y;

			PaintBox1->Canvas->Ellipse(paintBoxX - 2, paintBoxY - 2, paintBoxX + 2, paintBoxY + 2);
		}
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm1::N1Click(TObject *Sender)
{
	String message = "Уфологи обнаружили на некоторой местности K точек посадки НЛО. "
					 "Так как всем известно, что инопланетяне очень любят треугольники, вам была поставлена задача найти треугольник с самой меньшей площадью, который только можно из них построить, определить его геометрический центр и провести от него линию к самой удаленной от него точке посадки НЛО."
					 "Узнав длину этой линии человечество получит шанс узнать хоть что-нибудь о наших братьях по разуму.";
	ShowMessage(message);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N4Click(TObject *Sender)
{
	int nm = StringGrid1->Selection.Top;//Определяем номер выделенной строки
	Form2->Caption="Редактирование" ;
	Form2->Edit1->Text= Form1->StringGrid1->Cells[1][nm];
	Form2->Edit2->Text= Form1->StringGrid1->Cells[2][nm];
	Form2->Show();
}
//---------------------------------------------------------------------------


void __fastcall TForm1::N5Click(TObject *Sender)
{
	Form2->Caption="Добавление вручную" ;
	Form2->Show();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N6Click(TObject *Sender)
{
	Form3->Show();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N7Click(TObject *Sender)
{
	int nm= StringGrid1->Selection.Top;
	for(int i=nm; i < StringGrid1->RowCount-1; ++i)
	{
		StringGrid1->Rows[i] = StringGrid1->Rows[i+1];
		StringGrid1->Cells[0][i] = i ;  // Затереть текущую строку следующей
	}
	StringGrid1->RowCount--;     //умеьшить кол-во строк
	ShowMessage("Удаление строки произошло успешно.");
}
//---------------------------------------------------------------------------

void __fastcall TForm1::PaintBox1Paint(TObject *Sender)
{
	DrawAxes(PaintBox1->Canvas, PaintBox1->Width, PaintBox1->Height);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button1Click(TObject *Sender)
{
	DrawPoints();
}
//---------------------------------------------------------------------------

